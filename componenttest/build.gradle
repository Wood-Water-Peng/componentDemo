apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion

    defaultConfig {
        applicationId "com.example.componenttest"
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    flavorDimensions 'components'

    productFlavors {

        logincomponent {
            applicationId('com.example.component.login')
            dimension = 'components'
            applicationIdSuffix ".login"
            versionNameSuffix "-login"
        }
        othercomponent {
            applicationId('com.example.component.other')
            dimension = 'components'
            applicationIdSuffix ".other"
            versionNameSuffix "-other"
        }

        homecomponent {
            applicationId('com.example.component.home')
            dimension = 'components'
            applicationIdSuffix ".home"
            versionNameSuffix "-home"
        }
    }

}


def library = rootProject.ext.dependencies
def supportLibrary = rootProject.ext.dependencies.android.support

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    testImplementation 'junit:junit:' + library.junit
    api 'com.android.support:appcompat-v7:' + supportLibrary.appcompat_v7
    api 'com.android.support:recyclerview-v7:' + supportLibrary.recyclerview_v7
    api 'com.android.support:cardview-v7:' + supportLibrary.cardview_v7
    api 'com.android.support:design:' + library.design


    implementation project(':componentbase')
    othercomponentRuntimeOnly project(':othercomponent')

    //implementation project(':othercomponent')

    logincomponentRuntimeOnly project(':logincomponent')
    homecomponentRuntimeOnly project(':homecomponent')

    implementation project(':myProcessors')
    annotationProcessor project(':myProcessors')
}
